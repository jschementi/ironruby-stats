%thead
  %tr.sub
    %th{:colspan => 5}= title
%tbody
  - if mspec.nil? || mspec.empty?
    %tr
      %td
        No data
  - else
    %tr
      %th files
      %td{:colspan => 2}= data mspec[:ironruby][:files]
      %td{:colspan => 1}= data mspec[:ruby][:files]
      %td= green_or_red -1 * mspec[:delta][:files]
    %tr 
      %th examples
      %td{:colspan => 2}= data mspec[:ironruby][:examples]
      %td{:colspan => 1}= data mspec[:ruby][:examples]
      %td= green_or_red -1 * mspec[:delta][:examples]
    %tr
      %th expectations
      %td{:colspan => 2}= data mspec[:ironruby][:expectations]
      %td{:colspan => 1}
        %span= data mspec[:ruby][:expectations]
        - if title == "Library"
          %a{:href => 'javascript:void(0)', :onclick => "alert('The Ruby exceptions number is inflated by 2300, because RubySpec does not run that number of tests on Ruby, but will run on IronRuby. This prevents the IronRuby pass-rate for libraries from looking inflated.')"} ?
      %td= green_or_red -1 * mspec[:delta][:expectations]
    %tr
      %th failures
      %td{:colspan => 2}= mspec[:ironruby][:failures]
      %td= mspec[:ruby][:failures]
      %td= green_or_red mspec[:delta][:failures]
    %tr
      %th errors
      %td{:colspan => 2}= mspec[:ironruby][:errors]
      %td= mspec[:ruby][:errors]
      %td= green_or_red mspec[:delta][:errors]
    %tr
      %th total pass rate
      %td{:colspan => 2}= "#{tir = total_pass_rate(mspec[:ironruby], mspec[:ruby]) * 100}%"
      %td= "#{trb = total_pass_rate(mspec[:ruby], mspec[:ruby]) * 100}%"
      %td= green_or_red((tir - trb).round_to(2), "%")

